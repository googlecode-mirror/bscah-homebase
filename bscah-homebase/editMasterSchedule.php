<?php
/*
 * Copyright 2013 by Jerrick Hoang, Ivy Xing, Sam Roberts, James Cook, 
 * Johnny Coster, Judy Yang, Jackson Moniaga, Oliver Radwan, 
 * Maxwell Palmer, Nolan McNair, Taylor Talmage, and Allen Tucker. 
 * This program is part of RMH Homebase, which is free software.  It comes with 
 * absolutely no warranty. You can redistribute and/or modify it under the terms 
 * of the GNU General Public License as published by the Free Software Foundation
 * (see <http://www.gnu.org/licenses/ for more information).
 * 
 */

session_start();
session_cache_expire(30);
?>
<!-- page generated by the BowdoinRMH software package -->
<html>
    <head>
        <title>
            Edit Master Schedule Shift
        </title>
        <link rel="stylesheet" href="styles.css" type="text/css" />
    </head>
    <body>
        <div id="container">
            <?PHP include('header.php'); ?>
            <div id="content">
                <?php
                if ($_SESSION['access_level'] < 2) {
                    die("<p>Only managers can edit the master schedule.</p>");
                }
                $group = $_GET['group'];
                // $frequency=$_GET['frequency'];
                $venue = $_GET['venue'];
                $day = $_GET['day'];
                $shiftname = $_GET['shift'];
                $shift = array($group, $day, $shiftname);
                $shift = get_day_names($shift, $day);
                include_once('database/dbMasterSchedule.php');
                include_once('domain/MasterScheduleEntry.php');
                include_once('database/dbLog.php');
                //if($group=="" || $day=="" || $shiftname=="") {
                if ($group == "" || $day == "" || $shift == "") {
                    echo "<p>Invalid schedule parameters.  Please click on the \"Master Schedule\" link above to edit a master schedule shift.</p>";
                } // see if there is no master shift for this time slot and try to set times starting there
                else if (retrieve_dbMasterSchedule($venue . $day . $group . "-" . $shiftname) == false) {
                    $result = process_set_times($_POST, $group, $day, $shiftname, $venue);
                    if (!$result)  // the error check
                    die('Invalid query: ' . mysql_error());//Erick and James 
                    
                    if ($result) {
                        $returnpoint = "viewSchedule.php?frequency=" . $venue;
                        echo "<table align=\"center\"><tr><td align=\"center\" width=\"442\">
<br><a href=\"" . $returnpoint . "\">
Back to Master Schedule</a></td></tr></table>";
                    }
                    // if not, there's an opportunity to add a shift 
                    else {
                        //$groupdisplay = $venue . " Group ".$group;
                        echo ("<table align=\"center\" width=\"450\"><tr><td align=\"center\" colspan=\"2\"><b>
Adding a New Master Schedule shift for " . $group .
                        substr($shift[1], 3) . " " . $shift[3] . "s " . "
</b></td></tr>"
                        . "<tr><td>
<form method=\"POST\" style=\"margin-bottom:0;\">
<select name=\"new_start\">
<option value=\"0\">Please select a new starting time</option>"
                        . get_all_times() .
                        "</select><br>
<br><br>
<select name=\"new_end\">
<option value=\"0\">and ending time for this shift.</option>"
                        . get_all_times() .
                        "</select><br><br>
<input type=\"hidden\" name=\"_submit_change_times\" value=\"1\">
<input type=\"submit\" value=\"Add New Shift\" name=\"submit\">
</form><br></td></tr></table>");
                    }
                } else { // if one is there, see what we can do to update it
                    if (!process_fill_vacancy($_POST, $shift, $group, $venue) && // try to fill a vacancy
                            !process_add_volunteer($_POST, $shift, $venue) &&
                            !process_remove_shift($_POST, $shift, $group, $day, $shiftname, $venue)) { // try to remove the shift
                        if (process_unfill_shift($_POST, $shift, $venue)) {  // try to remove a person
                        } else if (process_add_slot($_POST, $shift, $venue)) { // try to add a new slot
                        } else if (process_ignore_slot($_POST, $shift, $venue)) {  //try to remove a slot
                        }
                        // we've tried to clear the shift, add a slot, or remove a slot;
                        // so now display the shift again.
                        $persons = get_persons($venue, $shift[0], $shift[1], $shift[2]);
                        // $groupdisplay = $venue . " Group ".$group;
                        echo ("<table align=\"center\" width=\"450\"><tr><td align=\"center\" colspan=\"2\"><b>
Master schedule shift for " . $group .
                        substr($shift[1], 3) . " " . $shift[3] . "s, " . do_name($shift[2]) . "
</b>
<form method=\"POST\" style=\"margin-bottom:0;\">
<input type=\"hidden\" name=\"_submit_remove_shift\" value=\"1\"><br>
<input type=\"submit\" value=\"Remove Entire Shift\"
name=\"submit\">
</form><br>
</td></tr>"
                        . "<tr><td valign=\"top\"><br>&nbsp;" . do_slot_num($shift, $venue) . "</td><td>
<form method=\"POST\" style=\"margin-bottom:0;\">
<input type=\"hidden\" name=\"_submit_add_slot\" value=\"1\"><br>
<input type=\"submit\" value=\"Add Slot\"
name=\"submit\" style=\"width: 250px\">
</form><br></td></tr>");
                        echo (display_filled_slots($persons)
                        . display_vacant_slots(get_total_vacancies($venue, $shift[0], $shift[1], $shift[2]))
                        . "</table>");
                        $returnpoint = "viewSchedule.php?frequency=" . $venue;
                        echo "<table align=\"center\"><tr><td align=\"center\" width=\"442\">
<br><a href=\"" . $returnpoint . "\">
Back to Master Schedule</a></td></tr></table>";
                    }
                }
                ?>
                <br>
             </div>
          <?PHP include('footer.inc'); ?>
        </div>
    </body>
</html>

                <?php

                function get_all_times() {
                    $s = "";
                    for ($hour = 9; $hour < 22; $hour++) {
                        $clock = $hour < 12 ? $hour . "am" : $hour - 12 . "pm";
                        if ($clock == "0pm")
                            $clock = "12pm";
                        $s = $s . "<option value=\"" . $hour . "\">" . $clock . "</option>";
                    }
                    $s = $s . "<option value=\"" . "overnight" . "\">" . "overnight" . "</option>";
                    return $s;
                }

                function process_set_times($post, $group, $day, $time, $venue) {
                    if (!array_key_exists('_submit_change_times', $post))
                        return false;
                    if ($post['new_start'] == "0")
                        $error = "Can't add new shift: you must select a start time.<br><br>";
                    else if ($post['new_start'] != "overnight" && $post['new_end'] == "0")
                        $error = "Can't add new shift: you must select an end time.<br><br>";
                    else {
                        $entry = new MasterScheduleEntry($venue, $day, $group, $post['new_start'], $post['new_end'], 0, "", "");
                        if (!insert_nonoverlapping($entry))
                            $error = "Can't insert a new shift into an overlapping time slot.<br><br>";
                    }
                    if ($error) {
                        echo $error;
                        return true;
                    } else {
                        //$groupdisplay = $venue . " Group ".$group." Time ".$time;
                        echo "Added a new shift for " . $group . " " . $day . "<br><br>";
                        add_log_entry('<a href=\"personEdit.php?id=' . $_SESSION['_id'] . '\">' . $_SESSION['f_name'] . ' ' .
                                $_SESSION['l_name'] . '</a> added a new master schedule shift: <a href=\"editMasterSchedule.php?group=' .
                                $group . "&day=" . $day . "&shift=" . $shiftname . "&venue=" . $venue . '\">' . $group . " " . $day . $shiftname . '</a>.');
                        return true;
                    }
                }

                function process_remove_shift($post, $shift, $week_no, $day, $time, $frequency) {
                    if (!array_key_exists('_submit_remove_shift', $post))
                        return false;
                    $id = $frequency . $day . $week_no . "-" . $time;
                    if (delete_dbMasterSchedule($id)) {
                        echo "<br>Deleted master schedule shift for " . $groupdisplay . "<br><br>";
                        $returnpoint = "viewSchedule.php?frequency=" . $frequency;
                        echo "<table align=\"center\"><tr><td align=\"center\" width=\"442\">
<br><a href=\"" . $returnpoint . "\">
Back to Master Schedule</a></td></tr></table>";
                        add_log_entry('<a href=\"personEdit.php?id=' . $_SESSION['_id'] . '\">' . $_SESSION['f_name'] . ' ' .
                                $_SESSION['l_name'] . '</a> deleted a new master schedule shift: <a href=\"editMasterSchedule.php?group=' .
                                $week_no . "&day=" . $day . "&shift=" . $shiftname . "&frequency=" . $frequency . '\">' . $frequency . " week_no " . $week_no . " " . $day . " " . $shiftname . '</a>.');
                        return true;
                    }
                    return false;
                }

                function do_name($id) {
                    if ($id == "overnight")
                        return "overnight";
                    else {
                        $start = substr($id, 0, strpos($id, "-"));
                        $end = substr($id, strpos($id, "-") + 1);
                        if ($start < 12)
                            if ($end < 12)
                                return $start . "am to " . $end . "am";
                            else if ($end==12)
                            return $start . "am to " . $end . "pm";
                            else
                                return $start . "am to " . ($end - 12) . "pm";
                        else if ($start==12)
                        return $start . "pm to " . ($end - 12) . "pm";
                        else
                            return ($start - 12) . "pm to " . ($end - 12) . "pm";
                    }
                }

                function do_slot_num($shift, $venue) {
                    $slots = get_total_slots($venue, $shift[0], $shift[1], $shift[2]);
                    if ($slots == 1)
                        return "1 slot for this shift:";
                    return $slots . " slots for this shift:";
                }

                function display_filled_slots($persons) {
                    $s = "";
                    if (!$persons[0])
                        array_shift($persons);
                    for ($i = 0; $i < count($persons); ++$i) {
                        $p = $persons[$i];
                        if (is_array($persons[$i]))
                            $p = $persons[$i]['first_name'] . " " . $persons[$i]['last_name'];
                        $s = $s . "<tr><td width=\"150\" valign=\"top\"><br>&nbsp;" . $p . "</td><td>
<form method=\"POST\" style=\"margin-bottom:0;\">
<input type=\"hidden\" name=\"_submit_filled_slot_" . $i . "\" value=\"1\"><br>
<input type=\"submit\" value=\"Remove Person / Create Vacancy\" name=\"submit\" style=\"width: 250px\">
</form><br></td></tr>";
                    }
                    return $s;
                }

                function display_vacant_slots($vacancies) {
                    $s = "";
                    for ($i = 0; $i < $vacancies; ++$i) {
                        $s = $s . "<tr><td width=\"150\" valign=\"top\"><br>&nbsp;<b>vacant</b></td><td>
<form method=\"POST\" style=\"margin-bottom:0;\">
<input type=\"hidden\" name=\"_submit_fill_vacancy\" value=\"1\"><br>
<input type=\"submit\" value=\"Assign Volunteer\" name=\"submit\" style=\"width: 250px\"></form>
<form method=\"POST\" style=\"margin-bottom:0;\">
<input type=\"hidden\" name=\"_submit_ignore_vacancy\" value=\"1\">
<input type=\"submit\" value=\"Remove Vacant Slot\" name=\"submit\" style=\"width: 250px\"></form>
<br></td></tr>";
                    }
                    return $s;
                }

                function process_fill_vacancy($post, $shift, $group, $venue) {
                    if (!array_key_exists('_submit_fill_vacancy', $post))
                        return false;
                    $groupdisplay = $venue . " Group " . $group;
                    echo "<table align=\"center\"><tr><td align=\"center\" width=\"450\"><b>
Filling a vacancy for " . $groupdisplay . substr($shift[1], 3) . "<br>" . $shift[3] . ", " . do_name($shift[2]) . "
</b></td></tr>
<tr><td><form method=\"POST\" style=\"margin-bottom:0;\">
<select name=\"scheduled_vol\">
<option value=\"0\" style=\"width: 371px;\">Select a volunteer With " . $shift[3] . ", " . do_name($shift[2]) . " availability</option>"
                    . get_available_volunteer_options($shift[2], $shift[4], get_persons($venue, $shift[0], $shift[1], $shift[2]), $venue) .
                    "</select><br><br>
<select name=\"all_vol\">
<option value=\"0\" style=\"width: 371px;\">Select from all volunteers in this group</option>"
                    . get_all_volunteer_options(get_persons($venue, $shift[0], $shift[1], $shift[2]), $venue) .
                    "</select><br><br>
<input type=\"hidden\" name=\"_submit_add_volunteer\" value=\"1\">
<input type=\"submit\" value=\"Add Volunteer\" name=\"submit\" style=\"width: 400px\">
</form></td></tr>";
                    echo "</table>";
                    echo "<table align=\"center\"><tr><td align=\"center\" width=\"450\">
<a href=\"editMasterSchedule.php?group=" . $shift[0] . "&day=" . $shift[1] . "&shift=" . $shift[2] . "&venue=" . $venue . "\">Back to Shift</a><br></td></tr></table>";
                    return true;

                    // check that person is not already working that shift
                    // check that person is available
                }

                function do_fill_vacancy_form($shift, $venue) {
                    
                }

                function process_unfill_shift($post, $shift, $venue) {
                    $persons = get_persons($venue, $shift[0], $shift[1], $shift[2]);
                    if (!$persons[0])
                        array_shift($persons);
                    for ($i = 0; $i < count($persons); ++$i) {
                        if (array_key_exists('_submit_filled_slot_' . $i, $post)) {
                            if (is_array($persons[$i]))
                                unschedule_person($venue, $shift[0], $shift[1], $shift[2], $persons[$i]['id']);
                            else
                                unschedule_person($venue, $shift[0], $shift[1], $shift[2], $persons[$i]);
                            return true;
                        }
                    }
                    return false;
                }

                function process_add_slot($post, $shift, $venue) {
                    if (array_key_exists('_submit_add_slot', $post)) {
                        edit_schedule_vacancy($venue, $shift[0], $shift[1], $shift[2], 1);
                        return true;
                    }
                    return false;
                }

                function process_ignore_slot($post, $shift, $venue) {
                    if (array_key_exists('_submit_ignore_vacancy', $post)) {
                        edit_schedule_vacancy($venue, $shift[0], $shift[1], $shift[2], -1);
                        return true;
                    }
                    return false;
                }

                function get_available_volunteer_options($time, $day, $persons, $week_no) {
                    if (!$persons[0])
                        array_shift($persons);
                    connect();
                    $start_time = substr($time, 0, strpos($time, "-"));
                    if ($start_time > 0) {
                        if ($start_time < 12) // 9-11 = morning start time
                            $chrtime = "morning";
                        else if ($start_time < 14) // 12-1 = early afternoon start time
                            $chrtime = "earlypm";
                        else if ($start_time < 18)  // 2-5 = late afternoon start time
                            $chrtime = "latepm";
                        else
                            $chrtime = "evening"; // 6-9 = evening
                    }
                    else
                        $chrtime = "overnight";

                    $query = "SELECT * FROM dbPersons WHERE status = 'active' " .
                            "AND availability LIKE '%" . $day . ":" . $chrtime . "%' ORDER BY last_name,first_name";
                    $result = mysql_query($query);
                    mysql_close();
                    $s = "";
                    for ($i = 0; $i < mysql_num_rows($result); ++$i) {
                        $row = mysql_fetch_row($result);
                        $value = $row[0];
                        $label = $row[2] . ", " . $row[1];
                        $match = false;
                        for ($j = 0; $j < count($persons); ++$j) {
                            if ($value == $persons[$j]['id']) {
                                $match = true;
                            }
                        }
                        if (!$match) {
                            $s = $s . "<option value=\"" . $value . "\">" . $label . "</option>";
                            $match = false;
                        }
                    }
                    return $s;
                }

                function get_all_volunteer_options($persons, $week_no) {
                    if (!$persons[0])
                        array_shift($persons);
                    connect();
                    $query = "SELECT * FROM dbPersons WHERE status = 'active' ORDER BY last_name,first_name";
                    $result = mysql_query($query);
                    mysql_close();
                    $s = "";
                    for ($i = 0; $i < mysql_num_rows($result); ++$i) {
                        $row = mysql_fetch_row($result);
                        $value = $row[0];
                        $label = $row[2] . ", " . $row[1];
                        $match = false;
                        for ($j = 0; $j < count($persons); ++$j) {
                            if ($value == $persons[$j]['id']) {
                                $match = true;
                            }
                        }
                        if (!$match) {
                            $s = $s . "<option value=\"" . $value . "\">" . $label . "</option>";
                            $match = false;
                        }
                    }
                    return $s;
                }

                function process_add_volunteer($post, $shift, $venue) {
                    if (!array_key_exists('_submit_add_volunteer', $post))
                        return false;
                    if ($post['all_vol'] == "0" && $post['scheduled_vol'] == "0")
                        $error = "<table align=\"center\"><tr><td width=\"400\">
You must select a volunteer.</td></tr></table><br>";
                    else if ($post['all_vol'] == "0")
                        $vol = $post['scheduled_vol'];
                    else
                        $vol = $post['all_vol'];
                    if ($error) {
                        echo $error;
                        do_fill_vacancy_form($shift, $venue);
                        return true;
                    } else {
                        schedule_person($venue, $shift[0], $shift[1], $shift[2], $vol);
                        return false;
                    }
                }

                function get_day_names(&$shift, $day) {
                    if ($day == "Mon") {
                        $shift[] = "Monday";
                        $shift[] = "Mon";
                    }
                    if ($day == "Tue") {
                        $shift[] = "Tuesday";
                        $shift[] = "Tue";
                    }
                    if ($day == "Wed") {
                        $shift[] = 'Wednesday';
                        $shift[] = "Wed";
                    }
                    if ($day == "Thu") {
                        $shift[] = "Thursday";
                        $shift[] = "Thu";
                    }
                    if ($day == "Fri") {
                        $shift[] = "Friday";
                        $shift[] = "Fri";
                    }
                    if ($day == "Sat") {
                        $shift[] = "Saturday";
                        $shift[] = "Sat";
                    } else {
                        $shift[] = "Sunday";
                        $shift[] = "Sun";
                    }
                    return $shift;
                }
                ?>

\
\
\
\
\
\
\
\
\
\
\
\
\
\
\


personsearch.php


<?php
/*
 * Copyright 2013 by Jerrick Hoang, Ivy Xing, Sam Roberts, James Cook, 
 * Johnny Coster, Judy Yang, Jackson Moniaga, Oliver Radwan, 
 * Maxwell Palmer, Nolan McNair, Taylor Talmage, and Allen Tucker. 
 * This program is part of RMH Homebase, which is free software.  It comes with 
 * absolutely no warranty. You can redistribute and/or modify it under the terms 
 * of the GNU General Public License as published by the Free Software Foundation
 * (see <http://www.gnu.org/licenses/ for more information).
 * 
 */

session_start();
session_cache_expire(30);
?>
<html>
    <head>
        <title>
            Search for People
        </title>
        <link rel="stylesheet" href="styles.css" type="text/css" />
    </head>
    <body>
        <div id="container">
            <?PHP include('header.php'); ?>
            <div id="content">
                <?PHP
                // display the search form
                $area = $_GET['area'];
                echo('<form method="post">');
                echo('<p><strong>Search for volunteers:</strong>');

                echo('<p>Type:<select name="s_type">' .
                '<option value="" SELECTED></option>' .
                '<option value="volunteer">House Volunteer</option>' . '<option value="sub">Sub</option>' .
                '<option value="weekendmanager">Weekend Manager</option>' .
                '<option value="guestchef">Guest Chef</option>' .
                '<option value="parking">Event Parking</option>' . '<option value="cleaning">House cleaning</option>' .
                '<option value="other">Other</option>' . '<option value="manager">Manager</option>' .
                '</select>');
                echo('&nbsp;&nbsp;Status:<select name="s_status">' .
                '<option value="" SELECTED></option>' . '<option value="applicant">Applicant</option>' . '<option value="active">Active</option>' .
                '<option value="LOA">On Leave</option>' . '<option value="former">Former</option>' .
                '</select>');
                echo '<p>Name (type a few letters): ';
                echo '<input type="text" name="s_name">';

                echo '<fieldset>
<legend>Availability: </legend>
<table><tr>
<td>Day (of week)</td>
<td>Shift</td>
</tr>';
                echo "<tr>";
                echo "<td>";
                $days = array('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun');
                echo '<select name="s_day">' . '<option value=""></option>';
                foreach ($days as $day) {
                    echo '<option value="' . $day . '">' . $day . '</option>';
                }
                echo '</select>';
                echo "</td><td>";
                $shifts = array('morning' => 'Morning (9-12)', 'earlypm' => 'Early Afternoon (12-3)', 'latepm' => 'Late Afternoon (3-6)',
                    'evening' => 'Evening (6-9)', 'overnight' => 'Overnight');
                echo '<select name="s_shift">' . '<option value=""></option>';
                foreach ($shifts as $shiftno => $shiftname) {
                    echo '<option value="' . $shiftno . '">' . $shiftname . '</option>';
                }
                echo '</select>';
                echo "</td>";
                echo "</tr>";
                echo '</table></fieldset>';

                echo('<p><input type="hidden" name="s_submitted" value="1"><input type="submit" name="Search" value="Search">');
                echo('</form></p>');

                // if user hit "Search"  button, query the database and display the results
                if ($_POST['s_submitted']) {
                    $type = $_POST['s_type'];
                    $status = $_POST['s_status'];
                    $name = trim(str_replace('\'', '&#39;', htmlentities($_POST['s_name'])));
                    // now go after the volunteers that fit the search criteria
                    include_once('database/dbPersons.php');
                    include_once('domain/Person.php');
                    $result = getonlythose_dbPersons($type, $status, $name, $_POST['s_day'], $_POST['s_shift']);
                    //$result = getall_dbPersons();
                    if (!$result)  
                    die('Invalid query: ' . mysql_error());//Erick and james

                    echo '<p><strong>Search Results:</strong> <p>Found ' . sizeof($result) . ' ' . $status . ' ';
                    if ($type != "")
                        echo $type . "s";
                    else
                        echo "persons";
                    if ($name != "")
                        echo ' with name like "' . $name . '"';
                    $availability = $_POST['s_day'] ." ". $_POST['s_shift'];
                    if ($availability != " ") {
                        echo " with availability " . $availability;
                    }
                    if (sizeof($result) > 0) {
                        echo ' (select one for more info).';
                        echo '<p><table> <tr><td>Name</td><td>Phone</td><td>E-mail</td><td>Availability</td></tr>';
                        foreach ($result as $vol) {
                            echo "<tr><td><a href=personEdit.php?id=" . str_replace(" ","_",$vol->get_id()) . ">" .
                            $vol->get_first_name() . " " . $vol->get_last_name() . "</td><td>" .
                            phone_edit($vol->get_phone1()) . "</td><td>" .
                            $vol->get_email() . "</td><td>";
                            foreach ($vol->get_availability() as $availableon) {
                                echo ($availableon . ", ");
                            }
                            echo "</td></a></tr>";
                        }
                    }
                    echo '</table>';
                }
                ?>
                <!-- below is the footer that we're using currently-->
                </div>
        </div>
        <?PHP include('footer.inc'); ?>
    </body>
</html>



\
\
\
\
\
\
\
\



addweek_newweek.inc


<?php
/*
 * Copyright 2013 by Jerrick Hoang, Ivy Xing, Sam Roberts, James Cook, 
 * Johnny Coster, Judy Yang, Jackson Moniaga, Oliver Radwan, 
 * Maxwell Palmer, Nolan McNair, Taylor Talmage, and Allen Tucker. 
 * This program is part of RMH Homebase, which is free software.  It comes with 
 * absolutely no warranty. You can redistribute and/or modify it under the terms 
 * of the GNU General Public License as published by the Free Software Foundation
 * (see <http://www.gnu.org/licenses/ for more information).
 * 
 */
?>

<p>
    <strong>Calendar Week Management</strong><br />
    Here you can add new weeks to the calendar and you can edit weeks that are already there. <br>Click the "Add new week" button for adding a new week, or select an option at the right of an existing week.</p>
<span class="nextWeekTable">
    <form method="POST">
        <p><table border="1">
            <tr><td>Weeks</td><td>Weekday Group</td><td>Weekend Group</td><td>Status (options)</td></tr>
            <?php
            $result = get_all_dbWeeks();
            if (!$result)  // the error check
            die('Invalid query: ' . mysql_error());// Erick and James
            
            for ($i = 0; $i < sizeof($result); ++$i) {
                $week = $result[$i];
                if ($i == sizeof($result)-1 || $i == 0)
                    $remove = true;
                else
                    $remove = false;
                if(($week->get_status()=="archived" && $_GET['archive']=="true") || $week->get_status()=="published" || 
                    ($week->get_status()=="unpublished" && $_SESSION['access_level']>=2))
                echo ("<tr><td>" . $week->get_name() . "</td><td>" . $week->get_weekday_group() . "</td>" .
                "<td>" . $week->get_weekend_group() . "</td>" .
                "<td>" . show_week_options($week, $remove) . "</td></tr>");
            }
            // finds the parameters for "generate next week" button
            if ($_SESSION['access_level'] >= 2) {
                if ($week){
                    $last = $week -> get_id();
                    if ($week->get_weekday_group() == "odd")
                        $next_weekday_group = "even";
                    else
                        $next_weekday_group = "odd";
                    
                    $weekend_group = $week -> get_weekend_group(); 
                    if ($week->get_weekend_group() == "1st")
                    $weekend_group = "2nd";
                    else if ($week->get_weekend_group() == "2nd")
                    $weekend_group = "3rd";
                    else if ($week->get_weekend_group() == "3rd")
                    $weekend_group = "4th";
                    else if ($week->get_weekend_group() == "4th" && substr($last, -5, 2) < 22)
                    $weekend_group = "5th";
                    else $weekend_group = "1st"; 
                }
                $new_week_timestamp = mktime(0, 0, 0, substr($last, 0, 2), substr($last, 3, 2) + 7, substr($last, 6, 2));
                echo ('<tr><td>');
            echo "<input type=\"hidden\" name=\"_new_week_timestamp\" value=\"" . $new_week_timestamp . "\">
<input type=\"hidden\" name=\"_submit_check_newweek\" value=\"1\">
<input type=\"submit\" value=\"Add new week\" name=\"Add new week\">";
                echo "</td><td>";
                echo "<select name=\"weekday_group\">";
                // the group option menus, expected groups selected by default
                $groups = array("odd", "even");
                foreach ($groups as $i) {
                    echo "<option value=\"" . $i . "\"";
                    if ($i == $next_weekday_group)
                        echo " SELECTED";
                    echo ">" . $i . "</option>";
                }
                echo "</td><td>";
                echo "<select name=\"weekend_group\">";
                // the group option menus, expected groups selected by default
                $groups = array("1st", "2nd", "3rd", "4th", "5th");
                foreach ($groups as $i) {
                    echo "<option value=\"" . $i . "\"";
                    if ($i == $weekend_group)
                        echo " SELECTED";
                    echo ">" . $i . "</option>";
                }
                echo "</select></td>";
                echo('<td align="center"><a href="addWeek.php?archive=');
            if ($_GET['archive'] == "true")
                echo 'false">Hide Archive</a></td></tr><tr>';
            else
                echo 'true">View Archive</a></td></tr><tr>';
                if ($firstweek) {
                    echo ('<td colspan="4"><select name="month">');
                    $months = array('', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec');
                    $today = date("M");
                    for ($i = 0; $i <= 12; ++$i) {
                        echo ("<option value=\"" . $i . "\"");
                        if ($_POST['month'] == $i || $today == $months[$i])
                            echo (" SELECTED");
                        echo (">" . $months[$i] . "</option>");
                    }
                    echo ('</select> <select name="day"> <option value="0"></option>');
                    $today = date("j");
                    for ($i = 1; $i <= 31; ++$i) {
                        echo ("<option ");
                        if ($_POST['day'] == $i || $today == $i)
                            echo (" SELECTED");
                        echo (">" . $i . "</option>");
                    }
                    echo ('</select><select name="year"> <option value="0"></option>');
                    $i = date("Y");
                    echo ("<option ");
                    if ($_POST['year'] == $i || $_POST['year'] != $i + 1)
                        echo (" SELECTED");
                    echo (">" . $i . "</option>");
                    echo ("<option ");
                    if ($_POST['year'] == $i + 1)
                        echo (" SELECTED");
                    echo (">" . ($i + 1) . "</option>");
                    echo ("</select></td>");
                }
                else echo "<td colspan = '4'>";    
            }
            echo "</td></tr></table>";    

            // determines what options apply to each week
            function show_week_options($week, $remove) {
                $id = $week->get_id();
                $status = $week->get_status();
                $end = $week->get_end();
                $options = "";
                $rightnow = time();
                $oneweek = 60 * 60 * 24 * 7;
                if ($status == "archived") {
                    $options = "archived (<a href=\"calendar.php?id=" . $id . "&venue=house\">view</a>)";
                }
                // see if right now is part of a new week.  If so, archive the previous week.
                // here was a BIG BUG -- today might not have an immediate predecessor week in the database,
                // in which case "week2" below will be null!  So this now accommodates gaps (missing weeks) in the dbWeeks table.
                else if ($rightnow > $end) {
                    $options = "archived (<a href=\"calendar.php?id=" . $id . "&venue=house\">view</a>)";
                    $week2 = get_dbWeeks($id);
                    if ($week2 != null) {
                        $week2->set_status("archived");
                        update_dbWeeks($week2);
                    }
                } else if ($status == "unpublished") {
                    $options = "unpublished 
(<a href=\"calendar.php?id=" . $id. "&venue=house&edit=true\">edit</a>)
(<a href=\"addWeek.php?publish=" . $id . "\">publish</a>)
(<a href=\"calendar.php?id=" . $id . "&venue=house\">view</a>)";
                } else { // status must be "published"
                    $options = "published (<a href=\"calendar.php?id=" . $id . "&venue=house&edit=true\">edit</a>)
(<a href=\"addWeek.php?publish=" . $id . "\">unpublish</a>)
(<a href=\"calendar.php?id=" . $id . "&venue=house\">view</a>)";
                }
                if ($remove)
                    $options = $options . " (<a href=\"addWeek.php?remove=" . $id . "&archive=".$_GET['archive']."\">remove</a>)";
                return $options;
            }
            ?>
    </form></span>

