<?php
    /*
     * Copyright 2013 by Jerrick Hoang, Ivy Xing, Sam Roberts, James Cook,
     * Johnny Coster, Judy Yang, Jackson Moniaga, Oliver Radwan,
     * Maxwell Palmer, Nolan McNair, Taylor Talmage, and Allen Tucker.
     * This program is part of RMH Homebase, which is free software.  It comes with
     * absolutely no warranty. You can redistribute and/or modify it under the terms
     * of the GNU General Public License as published by the Free Software Foundation
     * (see <http://www.gnu.org/licenses/ for more information).
     *
     */

    session_start();
    session_cache_expire(30);
?>
<!-- page generated by the BowdoinRMH software package -->
<html>
<head>
    <title>
        Edit Master Schedule Shift
    </title>
    <link rel="stylesheet" href="styles.css" type="text/css"/>
</head>
<body>
<div id="container">
    <?PHP include('header.php'); ?>
    <div id="content">
        <?php
            if ($_SESSION['access_level'] < 2) {
                die("<p>Only managers can edit the master schedule.</p>");
            }
            // $frequency=$_GET['frequency'];
            $venue = $_GET['venue'];
            $day = $_GET['day'];
            $shift = [$day, $_GET['shift']];
            $shift = get_day_names($shift, $day);
            include_once('database/dbMasterSchedule.php');
            include_once('domain/MasterScheduleEntry.php');
            include_once('database/dbLog.php');
            //if($group=="" || $day=="" || $shift=="") {
            if ($day == "" || $shift == "") {
                echo "<p>Invalid schedule parameters.  Please click on the \"Master Schedule\" link above to edit a master schedule shift.</p>";
            } // see if there is no master shift for this time slot and try to set times starting there
            else {
                if (retrieve_dbMasterSchedule($venue . $day . "-" . $shift) == false) {
                    $result = process_set_times($_POST, $day, $shift);

                    if ($result) {
                        $returnpoint = "viewSchedule.php?frequency=" . $venue;
                        echo "<table align=\"center\"><tr><td align=\"center\" width=\"442\">
		<br><a href=\"" . $returnpoint . "\">
		Back to Master Schedule</a></td></tr></table>";
                    }
                    // if not, there's an opportunity to add a shift 
                    else {
                        //$groupdisplay = $venue . " Group ".$group;
                        echo("<table align=\"center\" width=\"450\"><tr><td align=\"center\" colspan=\"2\"><b>
		Adding a New Master Schedule shift for " .
                            substr($shift[0], 3) . " " . $shift[2] . "
		</b></td></tr>"
                            . "<tr><td>
        <b>Shift Name:</b>
		<form method=\"POST\" style=\"margin-bottom:0;\">
		<input name=\"shift_name\" type=\"text\"><br>
		<select hidden name=\"new_start\">
		<option value=\"0\">Please select a new starting time</option>"
                            . get_all_times() .
                            "</select>

		<select hidden name=\"new_end\">
		<option value=\"0\">and ending time for this shift.</option>"
                            . get_all_times() .
                            "</select>
		<input type=\"hidden\" name=\"_submit_change_times\" value=\"1\">
		<input type=\"submit\" value=\"Add New Shift\" name=\"submit\">
		</form><br></td></tr></table>");
                    }
                }
                else { // if one is there, see what we can do to update it
                    if (!process_fill_vacancy($_POST, $shift, $venue) && // try to fill a vacancy
                        !process_add_volunteer($_POST, $shift, $venue) &&
                        !process_remove_shift($_POST, $shift, $day, $shift, $venue)
                    ) { // try to remove the shift
                        if (process_unfill_shift($_POST, $shift, $venue)) {  // try to remove a person
                        }
                        else {
                            if (process_add_slot($_POST, $shift, $venue)) { // try to add a new slot
                            }
                            else {
                                if (process_ignore_slot($_POST, $shift, $venue)) {  //try to remove a slot
                                }
                            }
                        }
                        // we've tried to clear the shift, add a slot, or remove a slot;
                        // so now display the shift again.
                        $persons = get_persons($venue, $shift[0], $shift[1]);
                        // $groupdisplay = $venue . " Group ".$group;
                        echo("<table align=\"center\" width=\"450\"><tr><td align=\"center\" colspan=\"2\"><b>
			Master schedule shift for " .
                            substr($shift[1], 3) . " " . $shift[2] . "s, " . do_name($shift[1]) . "
			</b>
			<form method=\"POST\" style=\"margin-bottom:0;\">
			<input type=\"hidden\" name=\"_submit_remove_shift\" value=\"1\"><br>
			<input type=\"submit\" value=\"Remove Entire Shift\"
			name=\"submit\">
			</form><br>
			</td></tr>"
                            . "<tr><td valign=\"top\"><br>&nbsp;" . do_slot_num($shift, $venue) . <<<TAG
</td><td>
			<form method="POST" style="margin-bottom:0;">
			<input type="hidden" name="_submit_add_slot" value="1"><br>
			<input type="submit" value="Add Slot"
			name="submit" style="width: 250px">
			</form><br></td></tr>
TAG
);
                        echo(display_filled_slots($persons)
                            . display_vacant_slots(get_total_vacancies($venue, $shift[0], $shift[1]))
                            . "</table>");
                        $returnpoint = "viewSchedule.php?frequency=" . $venue;
                        echo "<table align=\"center\"><tr><td align=\"center\" width=\"442\">
			<br><a href=\"" . $returnpoint . "\">
			 Back to Master Schedule</a></td></tr></table>";
                    }
                }
            }
        ?>
        <br>
    </div>
    <?PHP include('footer.inc'); ?>
</div>
</body>
</html>

<?php

    function get_all_times() {
        $s = "";
        for ($hour = 9; $hour < 22; $hour++) {
            $clock = $hour < 12 ? $hour . "am" : $hour - 12 . "pm";
            if ($clock == "0pm") {
                $clock = "12pm";
            }
            $s = $s . "<option value=\"" . $hour . "\">" . $clock . "</option>";
        }
        $s = $s . "<option value=\"" . "overnight" . "\">" . "overnight" . "</option>";

        return $s;
    }

    function process_set_times($post, $day) {
        $times = explode("-", $_GET['shift']);
        $start = $times[0];
        $end = $times[1];
        if (!array_key_exists('_submit_change_times', $post)) {
            return false;
        }
        $entry = new MasterScheduleEntry(
            $_GET['venue'], // Schedule type
            $day, // Day
            $start, // Start time
            $end, // End time
            0, // Slots
            "", // Persons
            "", // Notes
            $post['shift_name']
        );
        if (!insert_nonoverlapping($entry)) {
            $error = "Can't insert a new shift into an overlapping time slot.<br><br>";
        }
        if (isset($error)) {
            echo $error;

            return true;
        }
        else {
            //$groupdisplay = $venue . " Group ".$group." Time ".$time;
            echo "Added a new shift for " . $day . "<br><br>";
            add_log_entry('<a href=\"personEdit.php?id=' . $_SESSION['_id'] . '\">' . $_SESSION['f_name'] . ' ' .
                          $_SESSION['l_name'] .
                          '</a> added a new master schedule shift: <a href=\"editMasterSchedule.php?' .
                          "day=" . $day . "&shift=" . $post['shift_name'] . "&venue=" . $post['$venue'] . '\">' . " " .
                          $day . $post['shift_name'] . '</a>.');

            return true;
        }
    }

    function process_remove_shift($post, $shift, $day, $time, $frequency) {
        if (!array_key_exists('_submit_remove_shift', $post)) {
            return false;
        }
        $id = $frequency . $day . "-" . $time;
        if (delete_dbMasterSchedule($id)) {
            echo "<br>Deleted master schedule shift for " . "<br><br>";
            $returnpoint = "viewSchedule.php?frequency=" . $frequency;
            echo "<table align=\"center\"><tr><td align=\"center\" width=\"442\">
				<br><a href=\"" . $returnpoint . "\">
				Back to Master Schedule</a></td></tr></table>";
            add_log_entry('<a href=\"personEdit.php?id=' . $_SESSION['_id'] . '\">' . $_SESSION['f_name'] . ' ' .
                          $_SESSION['l_name'] .
                          '</a> deleted a new master schedule shift: <a href=\"editMasterSchedule.php?' .
                          "day=" . $day . "&shift=" . $shift . "&frequency=" . $frequency . '\">' .
                          $frequency . " " . $day . " " . $shift . '</a>.');

            return true;
        }

        return false;
    }

    function do_name($id) {
        if ($id == "overnight") {
            return "overnight";
        }
        else {
            $start = substr($id, 0, strpos($id, "-"));
            $end = substr($id, strpos($id, "-") + 1);
            if ($start < 12) {
                if ($end < 12) {
                    return $start . "am to " . $end . "am";
                }
                else {
                    if ($end == 12) {
                        return $start . "am to " . $end . "pm";
                    }
                    else {
                        return $start . "am to " . ($end - 12) . "pm";
                    }
                }
            }
            else {
                if ($start == 12) {
                    return $start . "pm to " . ($end - 12) . "pm";
                }
                else {
                    return ($start - 12) . "pm to " . ($end - 12) . "pm";
                }
            }
        }
    }

    function do_slot_num($shift, $venue) {
        $slots = get_total_slots($venue, $shift[0], $shift[1]);
        if ($slots == 1) {
            return "1 slot for this shift:";
        }

        return $slots . " slots for this shift:";
    }

    function display_filled_slots($persons) {
        $s = "";
        if (!$persons[0]) {
            array_shift($persons);
        }
        for ($i = 0; $i < count($persons); ++$i) {
            $p = $persons[$i];
            if (is_array($persons[$i])) {
                $p = $persons[$i]['first_name'] . " " . $persons[$i]['last_name'];
            }
            $s = $s . "<tr><td width=\"150\" valign=\"top\"><br>&nbsp;" . $p . "</td><td>
				<form method=\"POST\" style=\"margin-bottom:0;\">
				<input type=\"hidden\" name=\"_submit_filled_slot_" . $i . "\" value=\"1\"><br>
				<input type=\"submit\" value=\"Remove Person / Create Vacancy\" name=\"submit\" style=\"width: 250px\">
			</form><br></td></tr>";
        }

        return $s;
    }

    function display_vacant_slots($vacancies) {
        $s = "";
        for ($i = 0; $i < $vacancies; ++$i) {
            $s = $s . "<tr><td width=\"150\" valign=\"top\"><br>&nbsp;<b>vacant</b></td><td>
				<form method=\"POST\" style=\"margin-bottom:0;\">
				<input type=\"hidden\" name=\"_submit_fill_vacancy\" value=\"1\"><br>
				<input type=\"submit\" value=\"Assign Volunteer\" name=\"submit\" style=\"width: 250px\"></form>
				<form method=\"POST\" style=\"margin-bottom:0;\">
				<input type=\"hidden\" name=\"_submit_ignore_vacancy\" value=\"1\">
				<input type=\"submit\" value=\"Remove Vacant Slot\" name=\"submit\" style=\"width: 250px\"></form>
				<br></td></tr>";
        }

        return $s;
    }

    function process_fill_vacancy($post, $shift, $venue) {
        if (!array_key_exists('_submit_fill_vacancy', $post)) {
            return false;
        }
        $groupdisplay = $venue;
        echo "<table align=\"center\"><tr><td align=\"center\" width=\"450\"><b>
		Filling a vacancy for " . $groupdisplay . substr($shift[1], 3) . "<br>" . $shift[2] . ", " .
            do_name($shift[1]) . "
		</b></td></tr>
		<tr><td><form method=\"POST\" style=\"margin-bottom:0;\">
			<select name=\"scheduled_vol\">
			<option value=\"0\" style=\"width: 371px;\">Select a volunteer With " . $shift[2] . ", " .
            do_name($shift[1]) . " availability</option>"
            .
            get_available_volunteer_options($shift[1], $shift[3], get_persons($venue, $shift[0], $shift[1]),
                                            $venue) .
            "</select><br><br>
			<select name=\"all_vol\">
			<option value=\"0\" style=\"width: 371px;\">Select from all volunteers in this group</option>"
            . get_all_volunteer_options(get_persons($venue, $shift[0], $shift[1]), $venue) .
            "</select><br><br>
			<input type=\"hidden\" name=\"_submit_add_volunteer\" value=\"1\">
			<input type=\"submit\" value=\"Add Volunteer\" name=\"submit\" style=\"width: 400px\">
			</form></td></tr>";
        echo "</table>";
        echo "<table align=\"center\"><tr><td align=\"center\" width=\"450\">
		<a href=\"editMasterSchedule.php?" . "day=" . $shift[0] . "&shift=" . $shift[1] . "&venue=" .
            $venue . "\">Back to Shift</a><br></td></tr></table>";

        return true;

        // check that person is not already working that shift
        // check that person is available
    }

    function do_fill_vacancy_form($shift, $venue) {

    }

    function process_unfill_shift($post, $shift, $venue) {
        $persons = get_persons($venue, $shift[0], $shift[1]);
        if (!$persons[0]) {
            array_shift($persons);
        }
        for ($i = 0; $i < count($persons); ++$i) {
            if (array_key_exists('_submit_filled_slot_' . $i, $post)) {
                if (is_array($persons[$i])) {
                    unschedule_person($venue, $shift[0], $shift[1], $persons[$i]['id']);
                }
                else {
                    unschedule_person($venue, $shift[0], $shift[1], $persons[$i]);
                }

                return true;
            }
        }

        return false;
    }

    function process_add_slot($post, $shift, $venue) {
        if (array_key_exists('_submit_add_slot', $post)) {
            edit_schedule_vacancy($venue, $shift[0], $shift[1], 1);

            return true;
        }

        return false;
    }

    function process_ignore_slot($post, $shift, $venue) {
        if (array_key_exists('_submit_ignore_vacancy', $post)) {
            edit_schedule_vacancy($venue, $shift[0], $shift[1], -1);

            return true;
        }

        return false;
    }

    function get_available_volunteer_options($time, $day, $persons) {
        if (!$persons[0]) {
            array_shift($persons);
        }
        connect();
        $start_time = substr($time, 0, strpos($time, "-"));
        if ($start_time > 0) {
            if ($start_time < 12) { // 9-11 = morning start time
                $chrtime = "morning";
            }
            else if ($start_time < 14) { // 12-1 = early afternoon start time
                $chrtime = "earlypm";
            }
            else if ($start_time < 18) { // 2-5 = late afternoon start time
                $chrtime = "latepm";
            }
            else if ($start_time < 22) { // 6-9 = evening
                $chrtime = "evening";
            }
        }
        else {
            $chrtime = "overnight";
        }

        $query = "SELECT * FROM dbPersons WHERE status = 'active' " .
            "AND availability LIKE '%" . $day . ":" . $chrtime . "%' ORDER BY last_name,first_name";
        $result = mysql_query($query);
        mysql_close();
        $s = "";
        for ($i = 0; $i < mysql_num_rows($result); ++$i) {
            $row = mysql_fetch_row($result);
            $value = $row[0];
            $label = $row[2] . ", " . $row[1];
            $match = false;
            for ($j = 0; $j < count($persons); ++$j) {
                if ($value == $persons[$j]['id']) {
                    $match = true;
                }
            }
            if (!$match) {
                $s = $s . "<option value=\"" . $value . "\">" . $label . "</option>";
            }
        }

        return $s;
    }

    function get_all_volunteer_options($persons) {
        if (!$persons[0]) {
            array_shift($persons);
        }
        connect();
        $query = "SELECT * FROM dbPersons WHERE status = 'active' ORDER BY last_name,first_name";
        $result = mysql_query($query);
        mysql_close();
        $s = "";
        for ($i = 0; $i < mysql_num_rows($result); ++$i) {
            $row = mysql_fetch_row($result);
            $value = $row[0];
            $label = $row[2] . ", " . $row[1];
            $match = false;
            for ($j = 0; $j < count($persons); ++$j) {
                if ($value == $persons[$j]['id']) {
                    $match = true;
                }
            }
            if (!$match) {
                $s = $s . "<option value=\"" . $value . "\">" . $label . "</option>";
            }
        }

        return $s;
    }

    function process_add_volunteer($post, $shift, $venue) {
        if (!array_key_exists('_submit_add_volunteer', $post)) {
            return false;
        }
        if ($post['all_vol'] == "0" && $post['scheduled_vol'] == "0") {
            $error = "<table align=\"center\"><tr><td width=\"400\">
				You must select a volunteer.</td></tr></table><br>";
        }
        else {
            if ($post['all_vol'] == "0") {
                $vol = $post['scheduled_vol'];
            }
            else {
                $vol = $post['all_vol'];
            }
        }
        if ($error) {
            echo $error;
            do_fill_vacancy_form($shift, $venue);

            return true;
        }
        else {
            schedule_person($venue, $shift[0], $shift[1], $vol);

            return false;
        }
    }

    /**
     * Takes in a shift and a day and appends the long format of the date (eg Monday) and the short format (eg Mon)
     * @param $shift The shift to add to
     * @param $day The day of the week to add
     *
     * @return array The array with the long and short formats of the date appended
     */
    function get_day_names($shift, $day) {
        $days = [
            "Mon" => "Monday",
            "Tue" => "Tuesday",
            "Wed" => "Wednesday",
            "Thu" => "Thursday",
            "Fri" => "Friday",
            "Sat" => "Saturday",
            "Sun" => "Sunday"
        ];
        $dayName = isset($days[$day]) ? $days[$day] : "";
        if($dayName != ""){
            $shift[] = $dayName;
            $shift[] = $day;
        }
        else{
            error_log("ERROR: $day is not a valid day");
        }
        return $shift;
    }

?>
